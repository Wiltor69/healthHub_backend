{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Swagger for healthhub_backend",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://healthhub-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User's post and get endpoints"
    },
    {
      "name": "Recommended food",
      "description": "Get endpoint for recomended food"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Successful operation",
          "required": true,
          "content": {}
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Successful operation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/user/goal": {
      "put": {
        "tags": ["User"],
        "summary": "User's goal update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Goal",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userGoalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended food"],
        "summary": "Recommended food",
        "parameters": [],
        "requestBody": {
          "description": "nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Recommended food",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recommendedFoodRequest"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "weight",
          "height",
          "age",
          "gender",
          "goal"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Laura Jones"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "laura@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "weight": {
            "type": "number",
            "description": "User's weight",
            "example": 85
          },
          "height": {
            "type": "number",
            "description": "User's height",
            "example": 175
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": 25
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "Maintain"
          },
          "userActivity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.85
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "auth": {
            "type": "object",
            "properties": {
              "name": {
                "type": "number",
                "description": "User's name",
                "example": "Illia"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "auth": {
            "name": "illia",
            "email": "user@gmail.com"
          }
        }
      },
      "loginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "laura@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "loginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "auth": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "token": "User's token",
          "auth": {
            "email": "user@gmail.com"
          }
        }
      },
      "logoutErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Unauthorized error"
          }
        }
      },
      "userUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Laura Jones"
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": "25"
          },
          "height": {
            "type": "number",
            "description": "User's height",
            "example": "170"
          },
          "weight": {
            "type": "number",
            "description": "User's weight",
            "example": "80"
          },
          "userActivity": {
            "type": "number",
            "description": "User's activity",
            "example": "1.45"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          }
        }
      },
      "userUpdateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "user updated"
          }
        }
      },
      "userGoalRequest": {
        "type": "object",
        "properties": {
          "goal": {
            "description": "User's goal",
            "type": "string",
            "example": "Maintain"
          }
        }
      },
      "recommendedFoodRequest": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "nutrition": {
              "type": "object",
              "properties": {
                "carbohydrates": {
                  "type": "number",
                  "example": 14
                },
                "protein": {
                  "type": "number",
                  "example": 0.3
                },
                "fat": {
                  "type": "number",
                  "example": 0.2
                }
              }
            },
            "_id": {
              "type": "string",
              "example": "657d864f71d0552dc86ee08c"
            },
            "name": {
              "type": "string",
              "example": "Apple"
            },
            "amount": {
              "type": "string",
              "example": "100 g"
            },
            "img": {
              "type": "string",
              "example": "https://ftp.goit.study/img/you_health/Strawberries.png"
            },
            "calories": {
              "type": "number"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
