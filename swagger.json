{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Swagger for healthhub_backend",
    "description": "",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://healthhub-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User's post and get endpoints"
    },
    {
      "name": "Recommended food",
      "description": "Get endpoint for recomended food"
    },
    {
      "name": "Stats",
      "description": "Endpoints for today's and month's requests for water and calories"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Successful operation",
          "required": true,
          "content": {}
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "tags": ["User"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Successful operation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/user/goal": {
      "put": {
        "tags": ["User"],
        "summary": "User's goal update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Goal",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userGoalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/recommended-food": {
      "get": {
        "tags": ["Recommended food"],
        "summary": "Recommended food",
        "parameters": [],
        "requestBody": {
          "description": "nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Recommended food",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recommendedFoodRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/stats/food-intake": {
      "post": {
        "tags": ["Stats"],
        "summary": "endpoint to add meal",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Meal object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addFoodIntakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addFoodIntakeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/stats/water-intake": {
      "post": {
        "tags": ["Stats"],
        "summary": "endpoint to add water",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "water object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addWaterIntakeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addWaterIntakeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/stats/today": {
      "get": {
        "tags": ["Stats"],
        "summary": "endpoint to get meal and water for today",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/foodIntakeForTodayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/stats/water-intake/{waterId}": {
      "delete": {
        "tags": ["Stats"],
        "summary": "endpoint to delete water",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "type": "string",
            "description": "water id to delete",
            "name": "waterId"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/stats/food-intake/{mealId}": {
      "delete": {
        "tags": ["Stats"],
        "summary": "endpoint to delete food by id",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Meal id to delete",
            "name": "mealId"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/stats/month/{monthNumber}": {
      "get": {
        "tags": ["Stats"],
        "summary": "endpoint to get Calories and water",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "type": "string",
            "description": "month, which needed to get the information",
            "name": "monthNumber"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Stats For month",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getStatstForMonth"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/stats/food-intake/{mealId}/": {
      "put": {
        "tags": ["Stats"],
        "summary": "endpoint to change meal",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "type": "string",
            "description": "meal which is needed ",
            "name": "mealId"
          }
        ],
        "requestBody": {
          "description": "Nothing",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addFoodIntakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addFoodIntakeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/api/user/weight/{month}": {
      "get": {
        "tags": ["User"],
        "summary": "endpoint to get weight for month",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "type": "string",
            "description": "month which is needed ",
            "name": "month"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "User's weight for month",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "weightForMonthRes"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "endpoint to get all user's data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Nothing",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userCurrentResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "weight",
          "height",
          "age",
          "gender",
          "goal"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Laura Jones"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "laura@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "weight": {
            "type": "number",
            "description": "User's weight",
            "example": 85
          },
          "height": {
            "type": "number",
            "description": "User's height",
            "example": 175
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": 25
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "Maintain"
          },
          "userActivity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.85
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "auth": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "avatarURL": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "waterDailyNorma": {
                "type": "number"
              },
              "caloriesDayilyNorma": {
                "type": "number"
              },
              "goal": {
                "type": "string"
              },
              "gender": {
                "type": "string"
              },
              "age": {
                "type": "number"
              },
              "height": {
                "type": "number"
              },
              "weight": {
                "type": "number"
              },
              "userActivity": {
                "type": "string"
              }
            }
          }
        }
      },
      "loginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "laura@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "loginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "auth": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "token": "User's token",
          "auth": {
            "email": "user@gmail.com"
          }
        }
      },
      "weightForMonthRes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "number"
            },
            "weight": {
              "type": "number"
            },
            "_id": {
              "type": "string"
            }
          }
        }
      },
      "logoutErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Unauthorized error"
          }
        }
      },
      "userUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Laura Jones"
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": "25"
          },
          "height": {
            "type": "number",
            "description": "User's height",
            "example": "170"
          },
          "weight": {
            "type": "number",
            "description": "User's weight",
            "example": "80"
          },
          "userActivity": {
            "type": "number",
            "description": "User's activity",
            "example": "1.45"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          }
        }
      },
      "userUpdateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "user updated"
          }
        }
      },
      "userGoalRequest": {
        "type": "object",
        "properties": {
          "goal": {
            "description": "User's goal",
            "type": "string",
            "example": "Maintain"
          }
        }
      },
      "recommendedFoodRequest": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "nutrition": {
              "type": "object",
              "properties": {
                "carbohydrates": {
                  "type": "number",
                  "example": 14
                },
                "protein": {
                  "type": "number",
                  "example": 0.3
                },
                "fat": {
                  "type": "number",
                  "example": 0.2
                }
              }
            },
            "_id": {
              "type": "string",
              "example": "657d864f71d0552dc86ee08c"
            },
            "name": {
              "type": "string",
              "example": "Apple"
            },
            "amount": {
              "type": "string",
              "example": "100 g"
            },
            "img": {
              "type": "string",
              "example": "https://ftp.goit.study/img/you_health/Strawberries.png"
            },
            "calories": {
              "type": "number"
            }
          }
        }
      },
      "addFoodIntakeRequest": {
        "type": "object",
        "required": [
          "dishName",
          "mealType",
          "calories",
          "date",
          "carbonohidrates",
          "fat",
          "protein"
        ],
        "properties": {
          "dishName": {
            "type": "string",
            "example": "candy"
          },
          "mealType": {
            "type": "string",
            "example": "lunch"
          },
          "calories": {
            "type": "string",
            "example": "10"
          },
          "date": {
            "type": "string",
            "example": "2023-02-03T16:48:00.000+00:00"
          },
          "carbonohidrates": {
            "type": "string",
            "example": "6"
          },
          "fat": {
            "type": "string",
            "example": "2"
          },
          "protein": {
            "type": "string",
            "example": "2"
          }
        }
      },
      "addFoodIntakeResponse": {
        "type": "object",

        "properties": {
          "owner": {
            "type": "string",
            "example": "65884ced88b13a7d9a34cb98"
          },
          "dishName": {
            "type": "string",
            "example": "candy"
          },
          "mealType": {
            "type": "string",
            "example": "lunch"
          },
          "carbonohidrates": {
            "type": "string",
            "example": "6"
          },
          "fat": {
            "type": "string",
            "example": "2"
          },
          "protein": {
            "type": "string",
            "example": "2"
          },
          "calories": {
            "type": "string",
            "example": "10"
          },
          "date": {
            "type": "string",
            "example": "2023-02-03T16:48:00.000+00:00"
          },
          "_id": {
            "type": "string",
            "example": "6589ea8caa9f8d69a6a9eb74"
          },
          "__v": {
            "type": "number",
            "example": 0
          }
        }
      },
      "addWaterIntakeRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "1"
          },
          "date": {
            "type": "string",
            "example": "2023-12-24T13:39:33.737+00:00"
          }
        }
      },
      "addWaterIntakeResponse": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "date": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "foodIntakeForTodayResponse": {
        "type": "object",
        "properties": {
          "food": {
            "type": "object",
            "properties": {
              "foodServings": {
                "type": "array"
              },
              "caloriesDayilyNorma": {
                "type": "number"
              },
              "caloriesAmount": {
                "type": "number"
              },
              "fatAmount": {
                "type": "number"
              },
              "proteinAmount": {
                "type": "number"
              },
              "carbonohidratesAmount": {
                "type": "number"
              },
              "caloriesLeft": {
                "type": "number"
              },
              "fatLeft": {
                "type": "number"
              },
              "proteinLeft": {
                "type": "number"
              },
              "carbonohidratesLeft": {
                "type": "number"
              }
            }
          },
          "water": {
            "type": "object",
            "properties": {
              "waterDailyNorma": {
                "type": "number"
              },
              "dailyNormFulfillment": {
                "type": "number"
              },
              "waterLeft": {
                "type": "number"
              },
              "waterAmount": {
                "type": "number"
              }
            }
          }
        }
      },
      "forgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "laura@gmail.com"
          }
        }
      },
      "userCurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatarURL": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "waterDailyNorma": {
            "type": "number"
          },
          "caloriesDayilyNorma": {
            "type": "number"
          },
          "goal": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "age": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "userActivity": {
            "type": "string"
          },
          "arrForWholeTime": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "number"
                },
                "dates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number"
                      },
                      "weight": {
                        "type": "number"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "_id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "getStatsForMonth": {
        "type": "object",
        "properties": {
          "waterAverage": {
            "type": "number"
          },
          "foodAverage": {
            "type": "number"
          },
          "water": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                },
                "water": {
                  "type": "number"
                }
              }
            }
          },
          "food": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                },
                "food": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
